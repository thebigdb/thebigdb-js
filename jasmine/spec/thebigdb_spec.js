// Generated by CoffeeScript 1.6.3
(function() {
  describe("TheBigDB", function() {
    describe("when initializing", function() {
      it("returns a valid object", function() {
        var thebigdb;
        thebigdb = new TheBigDB;
        return expect(thebigdb.constructor).toEqual(TheBigDB);
      });
      it("loads the default configuration", function() {
        var thebigdb;
        thebigdb = new TheBigDB;
        return expect(thebigdb.configuration.apiHost).toEqual("api.thebigdb.com");
      });
      it("can override default configuration", function() {
        var thebigdb;
        thebigdb = new TheBigDB({
          apiHost: "test.host"
        });
        return expect(thebigdb.configuration.apiHost).toEqual("test.host");
      });
      describe("using SSL", function() {
        beforeEach(function() {
          return this.thebigdb = new TheBigDB({
            useSsl: true
          });
        });
        return it("automatically updates the port to 443", function() {
          return expect(this.thebigdb.configuration.apiPort).toEqual(443);
        });
      });
      return describe("using SSL with a specified port", function() {
        beforeEach(function() {
          return this.thebigdb = new TheBigDB({
            useSsl: true,
            apiPort: 1337
          });
        });
        return it("use the user set port", function() {
          return expect(this.thebigdb.configuration.apiPort).toEqual(1337);
        });
      });
    });
    describe("engine helper serializeQueryParams", function() {
      it("works with simple a=b&c=d params", function() {
        var thebigdb;
        thebigdb = new TheBigDB;
        return expect(thebigdb.serializeQueryParams({
          a: "b",
          c: "d"
        })).toEqual("a=b&c=d");
      });
      return it("works with more complex imbricated params", function() {
        var thebigdb;
        thebigdb = new TheBigDB;
        return expect(thebigdb.serializeQueryParams({
          house: "bricks",
          animals: ["cat", "dog"],
          computers: {
            cool: true,
            drives: ["hard", "flash"]
          }
        })).toEqual("house=bricks&animals%5B0%5D=cat&animals%5B1%5D=dog&computers%5Bcool%5D=true&computers%5Bdrives%5D%5B0%5D=hard&computers%5Bdrives%5D%5B1%5D=flash");
      });
    });
    return describe("engine helper mergeOptions", function() {
      return it("replaces the some default values while keeping the values non-overwritten", function() {
        var bar, foo, foo_plus_bar, thebigdb;
        thebigdb = new TheBigDB;
        foo = {
          a: "a",
          b: "b",
          c: "c"
        };
        bar = {
          d: "bar",
          b: "bar"
        };
        foo_plus_bar = {
          a: "a",
          b: "bar",
          c: "c",
          d: "bar"
        };
        return expect(thebigdb.mergeOptions(foo, bar)).toEqual(foo_plus_bar);
      });
    });
  });

}).call(this);
